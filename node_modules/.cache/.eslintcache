[{"C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\index.js":"1","C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\App.js":"2","C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\components\\Login.js":"3","C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\components\\Home.js":"4"},{"size":211,"mtime":1687357188632,"results":"5","hashOfConfig":"6"},{"size":394,"mtime":1687357814747,"results":"7","hashOfConfig":"6"},{"size":1690,"mtime":1687542098884,"results":"8","hashOfConfig":"6"},{"size":3940,"mtime":1687542006564,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tep6l3",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\index.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\App.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\components\\Login.js",["24","25"],[],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button, TextField, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  let navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  // This function is used to check if the login credentials are correct.\r\n  let checkLogin = () => {\r\n    if (username == \"\") {\r\n      alert(\"username required\");\r\n    } else if (password == \"\") {\r\n      alert(\"password required\");\r\n    }else if(username !== 'foo'){\r\n        alert(\"Username Incorrect\");\r\n    }else if(password !== 'bar'){\r\n        alert(\"Password Incorrect\");\r\n    }else{\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"password\", password);\r\n        navigate('/Home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_page\">\r\n      <Box className=\"login_box\">\r\n        <h2>Log In</h2>\r\n        <Typography>Username</Typography>\r\n        <TextField\r\n          size=\"small\"\r\n          sx={{ marginBottom: \"5%\" }}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <Typography>Password</Typography>\r\n        <TextField\r\n          size=\"small\"\r\n          sx={{ marginBottom: \"5%\" }}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{ marginTop: \"5%\" }}\r\n          onClick={checkLogin}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Separate disk\\Coding\\VS code\\Faceprep  assignment\\my_app\\src\\components\\Home.js",["26","27"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Skeleton,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const LOAD_DELAY = 1000;\r\n  const CARD_HEIGHT = 90;\r\n\r\n  // This is the `loginValidator` function.\r\n  // It is used to check if the user is logged in.\r\n  const loginValidator = () => {\r\n    if (\r\n      localStorage.getItem(\"username\") !== \"foo\" ||\r\n      localStorage.getItem(\"password\") !== \"bar\"\r\n    ) {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // This is the `logoutHandler` function.\r\n  // It is used to logout the user.\r\n  const logoutHandler = () => {\r\n    localStorage.setItem(\"username\", \"\");\r\n    localStorage.setItem(\"password\", \"\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loginValidator();\r\n  }, []);\r\n\r\n  const [userList, setUserList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [numCards, setNumCards] = useState(0);\r\n\r\n  const userAPI = `https://randomuser.me/api/?results=${numCards}&page=${page}`;\r\n\r\n  // This is the `fetchUserList` function.\r\n  // It is used to fetch the list of users from the API.\r\n  const fetchUserList = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(userAPI);\r\n      setUserList((prevUserList) => [\r\n        ...prevUserList,\r\n        ...response.data.results,\r\n      ]);\r\n\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, LOAD_DELAY);\r\n    } catch (err) {\r\n      console.error(err, \"error\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // This code is run when the window is resized\r\n  useEffect(() => {\r\n    const calculateNumCards = () => {\r\n      const windowHeight = window.innerHeight;\r\n      const numCards = Math.floor(windowHeight / CARD_HEIGHT);\r\n      setNumCards(numCards);\r\n    };\r\n\r\n    calculateNumCards();\r\n    window.addEventListener(\"resize\", calculateNumCards);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", calculateNumCards);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, [numCards, page]);\r\n\r\n\r\n\r\n\r\n  // This is the `handleScroll` function.\r\n  // This code is run when the scroll is used\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (\r\n        window.innerHeight + window.scrollY >=\r\n        document.documentElement.offsetHeight\r\n      ) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"20px\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={logoutHandler}\r\n          sx={{ backgroundColor: \"gold\", color: \"#000\" }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={{ margin: \"20px\", height: \"88vh\" }}>\r\n        {userList.map((user, index) => (\r\n          <div key={user.id.name}>\r\n            <Card sx={{ maxWidth: 220, marginBottom: 2 }}>\r\n              <CardMedia\r\n                sx={{ height: 90 }}\r\n                image={user.picture.large}\r\n                title={`${user.name.title} ${user.name.first}`}\r\n              />\r\n              <CardContent>\r\n                <Typography>\r\n                  {`${user.name.title} ${user.name.first} ${user.name.last}`}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n            {isLoading && index === userList.length - 1 && (\r\n              <Skeleton variant=\"rectangular\" width={220} height={100} />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",{"ruleId":"28","severity":1,"message":"29","line":15,"column":18,"nodeType":"30","messageId":"31","endLine":15,"endColumn":20},{"ruleId":"28","severity":1,"message":"29","line":17,"column":25,"nodeType":"30","messageId":"31","endLine":17,"endColumn":27},{"ruleId":"32","severity":1,"message":"33","line":39,"column":6,"nodeType":"34","endLine":39,"endColumn":8,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":86,"column":6,"nodeType":"34","endLine":86,"endColumn":22,"suggestions":"37"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginValidator'. Either include it or remove the dependency array.","ArrayExpression",["38"],"React Hook useEffect has a missing dependency: 'fetchUserList'. Either include it or remove the dependency array.",["39"],{"desc":"40","fix":"41"},{"desc":"42","fix":"43"},"Update the dependencies array to be: [loginValidator]",{"range":"44","text":"45"},"Update the dependencies array to be: [fetchUserList, numCards, page]",{"range":"46","text":"47"},[923,925],"[loginValidator]",[2229,2245],"[fetchUserList, numCards, page]"]